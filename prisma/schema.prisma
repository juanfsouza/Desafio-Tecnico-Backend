generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  role      Role
  skills    UserSkill[]
  mentorSessions  Session[] @relation("MentorSessions")
  menteeSessions  Session[] @relation("MenteeSessions")
}

model Skill {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users     UserSkill[]
  sessions  Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  mentorId  Int
  menteeId  Int
  skillId   Int
  startTime DateTime
  endTime   DateTime
  rating    Rating?
  mentor    User @relation("MentorSessions", fields: [mentorId], references: [id], onDelete: Cascade)
  mentee    User @relation("MenteeSessions", fields: [menteeId], references: [id], onDelete: Cascade)
  skill     Skill @relation(fields: [skillId], references: [id])
}

model Rating {
  id        Int      @id @default(autoincrement())
  sessionId Int      @unique
  score     Int
  comment   String
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}

model UserSkill {
  userId  Int
  skillId Int
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  skill   Skill @relation(fields: [skillId], references: [id])
  @@id([userId, skillId])
}

model Token {
  id          Int      @id @default(autoincrement())
  accessToken String
  refreshToken String
  scope       String
  tokenType   String
  expiryDate  DateTime
  createdAt   DateTime @default(now())
}

enum Role {
  MENTOR
  MENTEE
}
